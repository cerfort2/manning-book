name: Continuous Delivery Example

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    working-directory: ch06/s01

jobs:
  unit-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      working-directory: .
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with autopep8
      run: |
        autopep8 -r -d --exit-code . 
    - name: Run unit tests
      run: |
        pytest -m unit

  integration-tests:
    environment: testing
    needs: unit-test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.2
    - name: Install dependencies
      working-directory: .
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run integration tests against testing environment
      env:
        CLOUDSDK_CORE_PROJECT: ${{ secrets.CLOUDSDK_CORE_PROJECT }}
        GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        GOOGLE_REGION: ${{ secrets.GOOGLE_REGION }}
      run: |
        echo $GOOGLE_SERVICE_ACCOUNT_JSON  | base64 -d > $GOOGLE_APPLICATION_CREDENTIALS
        pytest -m integration --environment=test
    